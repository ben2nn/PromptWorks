services:
  postgres:
    image: postgres:15-alpine
    container_name: promptworks-postgres
    environment:
      POSTGRES_DB: promptworks
      POSTGRES_USER: promptworks
      POSTGRES_PASSWORD: promptworks
    ports:
      - "15432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U promptworks -d promptworks"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7-alpine
    container_name: promptworks-redis
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: promptworks-backend
    environment:
      APP_ENV: production
      APP_TEST_MODE: "false"
      API_V1_STR: /api/v1
      PROJECT_NAME: PromptWorks
      DATABASE_URL: postgresql+psycopg://promptworks:promptworks@postgres:5432/promptworks
      REDIS_URL: redis://redis:6379/0
      BACKEND_CORS_ORIGINS: '["http://frontend:18080","http://gallery:18081"]'
      BACKEND_CORS_ALLOW_CREDENTIALS: "true"
      # 文件存储配置
      FILE_STORAGE_TYPE: local
      FILE_STORAGE_PATH: /app/uploads
      FILE_MAX_SIZE: 10485760
      FILE_BASE_URL: http://backend:8000
      THUMBNAIL_SIZE: 200x200
      THUMBNAIL_QUALITY: 85
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - uploads_data:/app/uploads

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_BASE_URL: http://backend:8000/api/v1
    container_name: promptworks-frontend
    environment:
      VITE_API_BASE_URL: http://backend:8000/api/v1
    depends_on:
      backend:
        condition: service_started
    ports:
      - "18080:80"

  gallery:
    build:
      context: ./gallery
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_BASE_URL: http://backend:8000
    container_name: promptworks-gallery
    environment:
      NEXT_PUBLIC_API_BASE_URL: http://backend:8000
    depends_on:
      backend:
        condition: service_started
    ports:
      - "18081:80"

volumes:
  postgres_data:
  redis_data:
  uploads_data: